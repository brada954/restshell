REM =========================================================
REM ==  TEST ASSERT SUCCESS
REM ==
REM == Note: verbose output is misleading as absolute
REM == test values are used and not paths
REM =========================================================
assert --new
assert eq -v --test --len "1234" 4
assert eq -v --test --int "1234" 1234
assert eq -v --test "testthis" testthis
assert eq -v --test "testthis" testthis
assert neq -v --test "notthis" testthis
assert neq -v --test "notthis" testthis
assert gt -v --test 12345 12045
assert gte -v --test 12345 12345
assert lte -v --test 12345 12345
assert lte -v --test 12300 12345
assert lt -v --test 12300 12345

# An oddity is that --int modifier does not handle float strings
# convert to float type first
assert eq -v --test --int --float 12.4 12
assert isint -v --test --int --float 123.3

assert eq -v --test --regex "tth" testthis tth
assert eq -v --test --regex "tt+" testthis tt

assert --report
REM =========================================================
REM ==  TEST json objects
REM =========================================================
assert --new
load ..\rest\complex.json
dump -v
assert eq $.string "this is a \"string\""
assert neq $.string "this is"
assert isobj $.object
assert isarray $.object.array
assert isarray $.object.array[?(@.obj==1)].val
assert eq --first $.object.array[?(@.obj==2)].val 222
assert eq --first --expect-fail $.object.array[?(@.obj==3)].val 111
assert --report
assert --report-sum --new 
REM =========================================================

